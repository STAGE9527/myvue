{"version":3,"sources":["webpack:///./src/views/components/vuesax/dialog/dialog.vue?5d18","webpack:///src/views/components/vuesax/dialog/dialog.vue","webpack:///./src/views/components/vuesax/dialog/dialog.vue?9746","webpack:///./src/views/components/vuesax/dialog/dialog.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","staticClass","_v","on","$event","defaultalert","openAlert","confirmalert","openConfirm","promtalert","activePrompt","_s","val","activePrompt2","valMultipe","value1","value2","acceptAlert3","close","model","value","callback","$$v","expression","select1","_l","item","index","key","text","validName","$set","staticRenderFns","name","data","computed","methods","colorAlert","color","getColorRandom","$vs","dialog","title","accept","acceptAlert","notify","getRandomInt","min","max","Math","floor","random","type","acceptAlert2","component"],"mappings":"yHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,SAAS,CAACE,MAAM,CAAC,aAAa,WAAW,CAACF,EAAG,SAAS,CAACE,MAAM,CAAC,KAAO,OAAO,aAAa,SAAS,WAAW,SAAS,QAAQ,KAAK,QAAQ,OAAO,CAACF,EAAG,UAAU,CAACA,EAAG,KAAK,CAACG,YAAY,qBAAqB,CAACP,EAAIQ,GAAG,kCAAkCJ,EAAG,YAAY,CAACG,YAAY,cAAcD,MAAM,CAAC,KAAO,QAAQG,GAAG,CAAC,MAAQ,SAASC,GAAQV,EAAIW,cAAa,KAAQ,CAACP,EAAG,UAAU,CAACE,MAAM,CAAC,KAAO,WAAW,IAAI,GAAGF,EAAG,IAAI,CAACG,YAAY,iBAAiB,CAACP,EAAIQ,GAAG,wEAAwEJ,EAAG,OAAO,CAACJ,EAAIQ,GAAG,gBAAgBR,EAAIQ,GAAG,wDAAwDJ,EAAG,SAAS,CAACA,EAAG,SAAS,CAACE,MAAM,CAAC,QAAQ,IAAI,QAAQ,OAAO,CAACF,EAAG,UAAU,CAACA,EAAG,eAAe,CAACE,MAAM,CAAC,MAAQ,QAAQ,SAAW,oCAAoCF,EAAG,eAAe,CAACE,MAAM,CAAC,MAAQ,OAAO,SAAW,0CAA0CF,EAAG,eAAe,CAACE,MAAM,CAAC,MAAQ,QAAQ,SAAW,+CAA+CF,EAAG,eAAe,CAACE,MAAM,CAAC,MAAQ,SAAS,SAAW,kEAAkEF,EAAG,eAAe,CAACE,MAAM,CAAC,MAAQ,SAAS,SAAW,+FAA+FF,EAAG,eAAe,CAACE,MAAM,CAAC,MAAQ,OAAO,SAAW,uEAAuEF,EAAG,eAAe,CAACE,MAAM,CAAC,MAAQ,eAAe,SAAW,oDAAoDF,EAAG,eAAe,CAACE,MAAM,CAAC,MAAQ,eAAe,SAAW,qDAAqD,IAAI,IAAI,GAAGF,EAAG,MAAM,CAACG,YAAY,qBAAqB,CAACH,EAAG,YAAY,CAACE,MAAM,CAAC,MAAQ,UAAU,KAAO,QAAQG,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOV,EAAIY,UAAU,cAAc,CAACZ,EAAIQ,GAAG,mBAAmBJ,EAAG,YAAY,CAACE,MAAM,CAAC,MAAQ,UAAU,KAAO,QAAQG,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOV,EAAIY,UAAU,cAAc,CAACZ,EAAIQ,GAAG,mBAAmBJ,EAAG,YAAY,CAACE,MAAM,CAAC,MAAQ,SAAS,KAAO,QAAQG,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOV,EAAIY,UAAU,aAAa,CAACZ,EAAIQ,GAAG,kBAAkBJ,EAAG,YAAY,CAACE,MAAM,CAAC,MAAQ,UAAU,KAAO,QAAQG,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOV,EAAIY,UAAU,cAAc,CAACZ,EAAIQ,GAAG,mBAAmBJ,EAAG,YAAY,CAACE,MAAM,CAAC,MAAQ,OAAO,KAAO,QAAQG,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOV,EAAIY,UAAU,WAAW,CAACZ,EAAIQ,GAAG,gBAAgBJ,EAAG,YAAY,CAACE,MAAM,CAAC,MAAQ,UAAU,KAAO,YAAYG,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOV,EAAIY,UAAU,SAAS,CAACZ,EAAIQ,GAAG,4BAA4B,GAAGJ,EAAG,WAAW,CAACG,YAAY,YAAYD,MAAM,CAAC,MAAQ,OAAO,OAASN,EAAIW,cAAcF,GAAG,CAAC,gBAAgB,SAASC,GAAQV,EAAIW,aAAaD,KAAU,CAACN,EAAG,WAAW,CAACJ,EAAIQ,GAAG,81DAA62D,IAAI,GAAGJ,EAAG,UAAU,CAACA,EAAG,KAAK,CAACG,YAAY,qBAAqB,CAACP,EAAIQ,GAAG,0CAA0CJ,EAAG,YAAY,CAACG,YAAY,cAAcD,MAAM,CAAC,KAAO,QAAQG,GAAG,CAAC,MAAQ,SAASC,GAAQV,EAAIa,cAAa,KAAQ,CAACT,EAAG,UAAU,CAACE,MAAM,CAAC,KAAO,WAAW,IAAI,GAAGF,EAAG,IAAI,CAACG,YAAY,iBAAiB,CAACP,EAAIQ,GAAG,2HAA2HJ,EAAG,MAAM,CAACA,EAAG,YAAY,CAACE,MAAM,CAAC,MAAQ,UAAU,KAAO,YAAYG,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOV,EAAIc,iBAAiB,CAACd,EAAIQ,GAAG,oBAAoB,GAAGJ,EAAG,WAAW,CAACG,YAAY,YAAYD,MAAM,CAAC,MAAQ,OAAO,OAASN,EAAIa,cAAcJ,GAAG,CAAC,gBAAgB,SAASC,GAAQV,EAAIa,aAAaH,KAAU,CAACN,EAAG,WAAW,CAACJ,EAAIQ,GAAG,s3BAAq3B,IAAI,GAAGJ,EAAG,UAAU,CAACA,EAAG,KAAK,CAACG,YAAY,qBAAqB,CAACP,EAAIQ,GAAG,wCAAwCJ,EAAG,YAAY,CAACG,YAAY,cAAcD,MAAM,CAAC,KAAO,QAAQG,GAAG,CAAC,MAAQ,SAASC,GAAQV,EAAIe,YAAW,KAAQ,CAACX,EAAG,UAAU,CAACE,MAAM,CAAC,KAAO,WAAW,IAAI,GAAGF,EAAG,IAAI,CAACG,YAAY,iBAAiB,CAACP,EAAIQ,GAAG,mHAAmHJ,EAAG,OAAO,CAACJ,EAAIQ,GAAG,eAAeR,EAAIQ,GAAG,gHAAgHJ,EAAG,SAAS,CAACA,EAAG,SAAS,CAACE,MAAM,CAAC,QAAQ,IAAI,QAAQ,OAAO,CAACF,EAAG,MAAM,CAACG,YAAY,6BAA6B,CAACH,EAAG,YAAY,CAACE,MAAM,CAAC,MAAQ,UAAU,KAAO,UAAUG,GAAG,CAAC,MAAQ,SAASC,GAAQV,EAAIgB,cAAe,KAAQ,CAAChB,EAAIQ,GAAG,gBAAgBJ,EAAG,MAAM,CAACG,YAAY,gDAAgD,CAACH,EAAG,OAAO,CAACG,YAAY,wEAAwE,CAACP,EAAIQ,GAAG,yBAAyBR,EAAIQ,GAAG,mBAAmBR,EAAIiB,GAAY,MAATjB,EAAIkB,IAAU,OAAOlB,EAAIkB,KAAK,qBAAqB,KAAKd,EAAG,SAAS,CAACE,MAAM,CAAC,QAAQ,IAAI,QAAQ,OAAO,CAACF,EAAG,MAAM,CAACG,YAAY,6BAA6B,CAACH,EAAG,YAAY,CAACE,MAAM,CAAC,MAAQ,UAAU,KAAO,UAAUG,GAAG,CAAC,MAAQ,SAASC,GAAQV,EAAImB,eAAgB,KAAQ,CAACnB,EAAIQ,GAAG,uBAAuBJ,EAAG,MAAM,CAACG,YAAY,gDAAgD,CAACH,EAAG,OAAO,CAACG,YAAY,wEAAwE,CAACP,EAAIQ,GAAG,gBAAgBJ,EAAG,OAAO,CAACG,YAAY,0BAA0B,CAACP,EAAIQ,GAAGR,EAAIiB,GAAGjB,EAAIoB,WAAWC,WAAWjB,EAAG,OAAO,CAACG,YAAY,wEAAwE,CAACP,EAAIQ,GAAG,qBAAqBR,EAAIQ,GAAG,mBAAmBR,EAAIiB,GAAGjB,EAAIoB,WAAWE,QAAQ,qBAAqB,MAAM,GAAGlB,EAAG,YAAY,CAACE,MAAM,CAAC,OAASN,EAAIgB,cAAcP,GAAG,CAAC,OAAS,SAASC,GAAQV,EAAIkB,IAAI,IAAI,OAASlB,EAAIuB,aAAa,MAAQvB,EAAIwB,MAAM,gBAAgB,SAASd,GAAQV,EAAIgB,aAAaN,KAAU,CAACN,EAAG,MAAM,CAACG,YAAY,YAAY,CAACP,EAAIQ,GAAG,mDAAmDJ,EAAG,WAAW,CAACG,YAAY,OAAOD,MAAM,CAAC,YAAc,QAAQmB,MAAM,CAACC,MAAO1B,EAAO,IAAE2B,SAAS,SAAUC,GAAM5B,EAAIkB,IAAIU,GAAKC,WAAW,SAASzB,EAAG,YAAY,CAACG,YAAY,gBAAgBD,MAAM,CAAC,MAAQ,WAAWmB,MAAM,CAACC,MAAO1B,EAAW,QAAE2B,SAAS,SAAUC,GAAM5B,EAAI8B,QAAQF,GAAKC,WAAW,YAAY7B,EAAI+B,GAAI/B,EAAY,SAAE,SAASgC,EAAKC,GAAO,OAAO7B,EAAG,iBAAiB,CAAC8B,IAAID,EAAM3B,MAAM,CAAC,MAAQ0B,EAAKN,MAAM,KAAOM,EAAKG,UAAU,IAAI,KAAK/B,EAAG,YAAY,CAACE,MAAM,CAAC,MAAQ,SAAS,WAAWN,EAAIoC,UAAU,OAASpC,EAAImB,eAAeV,GAAG,CAAC,OAAS,SAASC,GAAQV,EAAIoB,WAAWC,OAAO,GAAGrB,EAAIoB,WAAWE,OAAO,IAAI,OAAStB,EAAIuB,aAAa,MAAQvB,EAAIwB,MAAM,gBAAgB,SAASd,GAAQV,EAAImB,cAAcT,KAAU,CAACN,EAAG,MAAM,CAACG,YAAY,sBAAsB,CAACP,EAAIQ,GAAG,6DAA6DJ,EAAG,IAAI,CAACJ,EAAIQ,GAAG,cAAcR,EAAIQ,GAAG,iBAAiBJ,EAAG,WAAW,CAACG,YAAY,OAAOD,MAAM,CAAC,YAAc,QAAQmB,MAAM,CAACC,MAAO1B,EAAIoB,WAAiB,OAAEO,SAAS,SAAUC,GAAM5B,EAAIqC,KAAKrC,EAAIoB,WAAY,SAAUQ,IAAMC,WAAW,uBAAuBzB,EAAG,WAAW,CAACG,YAAY,OAAOD,MAAM,CAAC,YAAc,aAAamB,MAAM,CAACC,MAAO1B,EAAIoB,WAAiB,OAAEO,SAAS,SAAUC,GAAM5B,EAAIqC,KAAKrC,EAAIoB,WAAY,SAAUQ,IAAMC,WAAW,uBAAuBzB,EAAG,WAAW,CAACE,MAAM,CAAC,QAAUN,EAAIoC,UAAU,MAAQ,SAAS,KAAO,iBAAiB,CAACpC,EAAIQ,GAAG,oDAAoD,KAAKJ,EAAG,WAAW,CAACG,YAAY,YAAYD,MAAM,CAAC,MAAQ,OAAO,OAASN,EAAIe,YAAYN,GAAG,CAAC,gBAAgB,SAASC,GAAQV,EAAIe,WAAWL,KAAU,CAACN,EAAG,WAAW,CAACJ,EAAIQ,GAAG,mPAAyPR,EAAIiB,GAAY,MAATjB,EAAIkB,IAAU,OAAOlB,EAAIkB,KAAK,yKAAiLlB,EAAIiB,GAAGjB,EAAIoB,WAAWC,QAAQ,eAAerB,EAAIiB,GAAGjB,EAAIoB,WAAWE,QAAQ,0jFAAylF,IAAI,IAAI,IAAI,IAC1hagB,EAAkB,GCuWtB,GACEC,KAAM,SACNC,KAAM,WAAR,OACA,eACA,gBACA,qBACA,mBACA,eACA,cACA,iBACA,gBACA,UACA,UACA,oBACA,8BACA,gCAEA,gBACA,iBACA,OACA,YACA,UACA,WAEA,gBAEEC,SAAU,CACRL,UADJ,WAEM,OACN,mEAIEM,QAAS,CACP9B,UADJ,SACA,GACMX,KAAK0C,WAAaC,GAAS3C,KAAK4C,iBAChC5C,KAAK6C,IAAIC,OAAO,CACdH,MAAO3C,KAAK0C,WACZK,MAAO,YAAf,wBACQb,KACR,+HACQc,OAAQhD,KAAKiD,eAGjBA,YAXJ,WAYMjD,KAAK6C,IAAIK,OAAO,CACdP,MAAO3C,KAAK0C,WACZK,MAAO,kBACPb,KAAM,6CAGVU,eAlBJ,WAmBM,SAASO,EAAaC,EAAKC,GACzB,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,IAAQA,EAEnD,MAAO,OAAb,8BACA,EACA,KAFA,YAGA,SAHA,MAKIvC,YA3BJ,WA4BMb,KAAK6C,IAAIC,OAAO,CACdW,KAAM,UACNd,MAAO,UACPI,MAAO,UACPb,KACR,+HACQc,OAAQhD,KAAK0D,gBAGjBA,aArCJ,WAsCM1D,KAAK6C,IAAIK,OAAO,CACdP,MAAO,UACPI,MAAO,gBACPb,KAAM,iDAGVZ,aA5CJ,WA6CMtB,KAAK6C,IAAIK,OAAO,CACdP,MAAO,UACPI,MAAO,kBACPb,KAAM,6CAGVX,MAnDJ,WAoDMvB,KAAK6C,IAAIK,OAAO,CACdP,MAAO,SACPI,MAAO,SACPb,KAAM,2BChc+W,I,YCOzXyB,EAAY,eACd,EACA7D,EACAuC,GACA,EACA,KACA,KACA,MAIa,aAAAsB,E","file":"js/chunk-2d0b66b9.0ffa51ec.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('vs-row',{attrs:{\"vs-justify\":\"center\"}},[_c('vs-col',{attrs:{\"type\":\"flex\",\"vs-justify\":\"center\",\"vs-align\":\"center\",\"vs-lg\":\"12\",\"vs-xs\":\"12\"}},[_c('vs-card',[_c('h3',{staticClass:\"card-title d-flex\"},[_vm._v(\"\\n        With Alert\\n        \"),_c('vs-button',{staticClass:\"ml-auto p-0\",attrs:{\"type\":\"line\"},on:{\"click\":function($event){_vm.defaultalert=true}}},[_c('vs-icon',{attrs:{\"icon\":\"code\"}})],1)],1),_c('p',{staticClass:\"card-subtitle\"},[_vm._v(\"\\n        To generate a dialog we have the global function\\n        \"),_c('code',[_vm._v(\"$vs.dialog\")]),_vm._v(\" the parameters to generate the dialog are\\n      \")]),_c('vs-row',[_c('vs-col',{attrs:{\"vs-lg\":\"8\",\"vs-xs\":\"12\"}},[_c('vs-list',[_c('vs-list-item',{attrs:{\"title\":\"title\",\"subtitle\":\"title of the dialogue - String\"}}),_c('vs-list-item',{attrs:{\"title\":\"text\",\"subtitle\":\"internal text of the dialog - String\"}}),_c('vs-list-item',{attrs:{\"title\":\"color\",\"subtitle\":\"color of the component - Colors, RGB, HEX\"}}),_c('vs-list-item',{attrs:{\"title\":\"accept\",\"subtitle\":\"function that executes the user accept the dialog - Function\"}}),_c('vs-list-item',{attrs:{\"title\":\"cancel\",\"subtitle\":\"function that executes the user to cancel the dialog (if it is a confirm type) - Function\"}}),_c('vs-list-item',{attrs:{\"title\":\"type\",\"subtitle\":\"determines the type of dialog (alert or confirm) - alert, confirm\"}}),_c('vs-list-item',{attrs:{\"title\":\"buttonAccept\",\"subtitle\":\"determines the type of accept button - Boolean\"}}),_c('vs-list-item',{attrs:{\"title\":\"buttonCancel\",\"subtitle\":\"determines the type of cancel button - Boolean\"}})],1)],1)],1),_c('div',{staticClass:\"m-3 btn-alignment\"},[_c('vs-button',{attrs:{\"color\":\"primary\",\"type\":\"flat\"},on:{\"click\":function($event){return _vm.openAlert('primary')}}},[_vm._v(\"Alert Primary\")]),_c('vs-button',{attrs:{\"color\":\"success\",\"type\":\"flat\"},on:{\"click\":function($event){return _vm.openAlert('success')}}},[_vm._v(\"Alert Success\")]),_c('vs-button',{attrs:{\"color\":\"danger\",\"type\":\"flat\"},on:{\"click\":function($event){return _vm.openAlert('danger')}}},[_vm._v(\"Alert Danger\")]),_c('vs-button',{attrs:{\"color\":\"warning\",\"type\":\"flat\"},on:{\"click\":function($event){return _vm.openAlert('warning')}}},[_vm._v(\"Alert Warning\")]),_c('vs-button',{attrs:{\"color\":\"dark\",\"type\":\"flat\"},on:{\"click\":function($event){return _vm.openAlert('dark')}}},[_vm._v(\"Alert Dark\")]),_c('vs-button',{attrs:{\"color\":\"primary\",\"type\":\"gradient\"},on:{\"click\":function($event){return _vm.openAlert(null)}}},[_vm._v(\"Alert Color RGB | HEX\")])],1),_c('vs-popup',{staticClass:\"holamundo\",attrs:{\"title\":\"Code\",\"active\":_vm.defaultalert},on:{\"update:active\":function($event){_vm.defaultalert=$event}}},[_c('vs-prism',[_vm._v(\"\\n          <div class=\\\"m-3 btn-alignment\\\">\\n          <vs-button @click=\\\"openAlert('primary')\\\" color=\\\"primary\\\" type=\\\"flat\\\">Alert Primary</vs-button>\\n          <vs-button @click=\\\"openAlert('success')\\\" color=\\\"success\\\" type=\\\"flat\\\">Alert Success</vs-button>\\n          <vs-button @click=\\\"openAlert('danger')\\\" color=\\\"danger\\\" type=\\\"flat\\\">Alert Danger</vs-button>\\n          <vs-button @click=\\\"openAlert('warning')\\\" color=\\\"warning\\\" type=\\\"flat\\\">Alert Warning</vs-button>\\n          <vs-button @click=\\\"openAlert('dark')\\\" color=\\\"dark\\\" type=\\\"flat\\\">Alert Dark</vs-button>\\n          <vs-button @click=\\\"openAlert(null)\\\" color=\\\"primary\\\" type=\\\"gradient\\\">Alert Color RGB | HEX</vs-button>\\n          </div>\\n          <script>\\n          export default {\\n          data:()=>({\\n          colorAlert:'primary',\\n          titleAlert:'Alert',\\n          activeAlert:false,\\n          valueInput:'',\\n          }),\\n          methods:{\\n          openAlert(color){\\n          this.colorAlert = color || this.getColorRandom()\\n          this.$vs.dialog({\\n          color:this.colorAlert,\\n          title: `Dialog - ${this.colorAlert}`,\\n          text: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.',\\n          accept:this.acceptAlert\\n          })\\n          },\\n          acceptAlert(){\\n          this.$vs.notify({\\n          color:this.colorAlert,\\n          title:'Accept Selected',\\n          text:'Lorem ipsum dolor sit amet, consectetur'\\n          })\\n          },\\n          getColorRandom(){\\n          function getRandomInt(min, max) {\\n          return Math.floor(Math.random() * (max - min)) + min;\\n          }\\n          return `rgb(${getRandomInt(0,255)},${getRandomInt(0,255)},${getRandomInt(0,255)})`\\n          },\\n          }\\n          }\\n          </script>\\n        \")])],1)],1),_c('vs-card',[_c('h3',{staticClass:\"card-title d-flex\"},[_vm._v(\"\\n        With Confirm Alert\\n        \"),_c('vs-button',{staticClass:\"ml-auto p-0\",attrs:{\"type\":\"line\"},on:{\"click\":function($event){_vm.confirmalert=true}}},[_c('vs-icon',{attrs:{\"icon\":\"code\"}})],1)],1),_c('p',{staticClass:\"card-subtitle\"},[_vm._v(\"If you need a dialog of type confirm you can do it just by changing the type as a parameter inside the main function.\")]),_c('div',[_c('vs-button',{attrs:{\"color\":\"primary\",\"type\":\"gradient\"},on:{\"click\":function($event){return _vm.openConfirm()}}},[_vm._v(\"Alert Primary\")])],1),_c('vs-popup',{staticClass:\"holamundo\",attrs:{\"title\":\"Code\",\"active\":_vm.confirmalert},on:{\"update:active\":function($event){_vm.confirmalert=$event}}},[_c('vs-prism',[_vm._v(\"\\n          <div>\\n          <vs-button @click=\\\"openConfirm()\\\" color=\\\"danger\\\" type=\\\"gradient\\\">Alert Primary</vs-button>\\n          </div>\\n          <script>\\n          export default {\\n          data: () => ({\\n          activeConfirm: false\\n          }),\\n          methods: {\\n          openConfirm() {\\n          this.$vs.dialog({\\n          type: 'confirm',\\n          color: 'danger',\\n          title: `Confirm`,\\n          text: 'Cake sesame snaps cupcake gingerbread danish I love gingerbread. Apple pie pie jujubes chupa chups.',\\n          accept: this.acceptAlert\\n          })\\n          },\\n          acceptAlert() {\\n          this.$vs.notify({\\n          color: 'danger',\\n          title: 'Deleted image',\\n          text: 'The selected image was successfully deleted'\\n          })\\n          },\\n          }\\n          }\\n          </script>\\n        \")])],1)],1),_c('vs-card',[_c('h3',{staticClass:\"card-title d-flex\"},[_vm._v(\"\\n        With Promt Alert\\n        \"),_c('vs-button',{staticClass:\"ml-auto p-0\",attrs:{\"type\":\"line\"},on:{\"click\":function($event){_vm.promtalert=true}}},[_c('vs-icon',{attrs:{\"icon\":\"code\"}})],1)],1),_c('p',{staticClass:\"card-subtitle\"},[_vm._v(\"\\n        To add a dialog of type prompt we have a global function a completely independent component\\n        \"),_c('code',[_vm._v(\"vs-prompt\")]),_vm._v(\". This allows more flexibility with the input and ability to add any type of input and components.\\n      \")]),_c('vs-row',[_c('vs-col',{attrs:{\"vs-lg\":\"6\",\"vs-xs\":\"12\"}},[_c('div',{staticClass:\"d-flex align-items-center\"},[_c('vs-button',{attrs:{\"color\":\"primary\",\"type\":\"border\"},on:{\"click\":function($event){_vm.activePrompt = true}}},[_vm._v(\"Run prompt\")]),_c('div',{staticClass:\"modelx bg-light p-3 shadow ml-3 rounded-pill\"},[_c('span',{staticClass:\"text-primary font-weight-bold border-bottom pb-1 border-primary mr-3\"},[_vm._v(\"Security Code Here:\")]),_vm._v(\"\\n              \"+_vm._s(_vm.val==null?'null':_vm.val)+\"\\n            \")])],1)]),_c('vs-col',{attrs:{\"vs-lg\":\"6\",\"vs-xs\":\"12\"}},[_c('div',{staticClass:\"d-flex align-items-center\"},[_c('vs-button',{attrs:{\"color\":\"primary\",\"type\":\"border\"},on:{\"click\":function($event){_vm.activePrompt2 = true}}},[_vm._v(\"Run prompt inputs\")]),_c('div',{staticClass:\"modelx bg-light p-3 shadow ml-3 rounded-pill\"},[_c('span',{staticClass:\"text-primary font-weight-bold border-bottom pb-1 border-primary mr-3\"},[_vm._v(\"Name Here:\")]),_c('span',{staticClass:\"mr-3 border-right pr-3\"},[_vm._v(_vm._s(_vm.valMultipe.value1))]),_c('span',{staticClass:\"text-primary font-weight-bold border-bottom pb-1 border-primary mr-3\"},[_vm._v(\"Last Name Here:\")]),_vm._v(\"\\n              \"+_vm._s(_vm.valMultipe.value2)+\"\\n            \")])],1)])],1),_c('vs-prompt',{attrs:{\"active\":_vm.activePrompt},on:{\"cancel\":function($event){_vm.val=''},\"accept\":_vm.acceptAlert3,\"close\":_vm.close,\"update:active\":function($event){_vm.activePrompt=$event}}},[_c('div',{staticClass:\"p-2 pb-0\"},[_vm._v(\"\\n          Enter the security code\\n          \"),_c('vs-input',{staticClass:\"mb-3\",attrs:{\"placeholder\":\"Code\"},model:{value:(_vm.val),callback:function ($$v) {_vm.val=$$v},expression:\"val\"}}),_c('vs-select',{staticClass:\"selectExample\",attrs:{\"label\":\"Figuras\"},model:{value:(_vm.select1),callback:function ($$v) {_vm.select1=$$v},expression:\"select1\"}},_vm._l((_vm.options1),function(item,index){return _c('vs-select-item',{key:index,attrs:{\"value\":item.value,\"text\":item.text}})}),1)],1)]),_c('vs-prompt',{attrs:{\"color\":\"danger\",\"is-valid\":_vm.validName,\"active\":_vm.activePrompt2},on:{\"cancel\":function($event){_vm.valMultipe.value1='',_vm.valMultipe.value2=''},\"accept\":_vm.acceptAlert3,\"close\":_vm.close,\"update:active\":function($event){_vm.activePrompt2=$event}}},[_c('div',{staticClass:\"con-exemple-prompt\"},[_vm._v(\"\\n          Enter your first and last name to\\n          \"),_c('b',[_vm._v(\"continue\")]),_vm._v(\".\\n          \"),_c('vs-input',{staticClass:\"mb-3\",attrs:{\"placeholder\":\"Name\"},model:{value:(_vm.valMultipe.value1),callback:function ($$v) {_vm.$set(_vm.valMultipe, \"value1\", $$v)},expression:\"valMultipe.value1\"}}),_c('vs-input',{staticClass:\"mb-3\",attrs:{\"placeholder\":\"Last Name\"},model:{value:(_vm.valMultipe.value2),callback:function ($$v) {_vm.$set(_vm.valMultipe, \"value2\", $$v)},expression:\"valMultipe.value2\"}}),_c('vs-alert',{attrs:{\"active\":!_vm.validName,\"color\":\"danger\",\"icon\":\"new_releases\"}},[_vm._v(\"Fields can not be empty please enter the data\")])],1)]),_c('vs-popup',{staticClass:\"holamundo\",attrs:{\"title\":\"Code\",\"active\":_vm.promtalert},on:{\"update:active\":function($event){_vm.promtalert=$event}}},[_c('vs-prism',[_vm._v(\"\\n          <template lang=\\\"html\\\">\\n          <div class=\\\"centerx con-exemple-prompt\\\">\\n          <!-- <vs-button @click=\\\"openPrompt\\\" color=\\\"primary\\\" type=\\\"border\\\">Run prompt</vs-button> -->\\n          <div class=\\\"modelx\\\">\\n          \"+_vm._s(_vm.val==null?'null':_vm.val)+\"\\n          </div>\\n          <vs-button @click=\\\"activePrompt = true\\\" color=\\\"primary\\\" type=\\\"border\\\">Run prompt</vs-button>\\n          <div class=\\\"modelx\\\">\\n          \"+_vm._s(_vm.valMultipe.value1)+\"\\n          \"+_vm._s(_vm.valMultipe.value2)+\"\\n          </div>\\n          <vs-button @click=\\\"activePrompt2 = true\\\" color=\\\"primary\\\" type=\\\"border\\\">Run prompt inputs</vs-button>\\n          <vs-prompt\\n          @cancel=\\\"val=''\\\"\\n          @accept=\\\"acceptAlert\\\"\\n          @close=\\\"close\\\"\\n          :active.sync=\\\"activePrompt\\\">\\n          <div class=\\\"con-exemple-prompt\\\">\\n          Enter the security code\\n          <vs-input placeholder=\\\"Code\\\" placeholder=\\\"Code\\\" v-model=\\\"val\\\"/>\\n          <vs-select\\n          class=\\\"selectExample\\\"\\n          label=\\\"Figuras\\\"\\n          v-model=\\\"select1\\\"\\n          >\\n          <vs-select-item :key=\\\"index\\\" :value=\\\"item.value\\\" :text=\\\"item.text\\\" v-for=\\\"item,index in options1\\\" />\\n          </vs-select>\\n          </div>\\n          </vs-prompt>\\n          <vs-prompt\\n          color=\\\"danger\\\"\\n          @cancel=\\\"valMultipe.value1='',valMultipe.value2=''\\\"\\n          @accept=\\\"acceptAlert\\\"\\n          @close=\\\"close\\\"\\n          :is-valid=\\\"validName\\\"\\n          :active.sync=\\\"activePrompt2\\\">\\n          <div class=\\\"con-exemple-prompt\\\">\\n          Enter your first and last name to <b>continue</b>.\\n          <vs-input placeholder=\\\"Name\\\" v-model=\\\"valMultipe.value1\\\"/>\\n          <vs-input placeholder=\\\"Last Name\\\" v-model=\\\"valMultipe.value2\\\"/>\\n          <vs-alert :active=\\\"!validName\\\" color=\\\"danger\\\" icon=\\\"new_releases\\\" >\\n          Fields can not be empty please enter the data\\n          </vs-alert>\\n          </div>\\n          </vs-prompt>\\n          </div>\\n          </template>\\n          <script>\\n          import Vue from 'vue'\\n          export default {\\n          data(){\\n          return {\\n          select1:2,\\n          options1:[\\n          {text:'IT',value:0},\\n          {text:'Blade Runner',value:2},\\n          {text:'Thor Ragnarok',value:3},\\n          ],\\n          activePrompt:false,\\n          activePrompt2:false,\\n          val:'',\\n          valMultipe:{\\n          value1:'',\\n          value2:''\\n          },\\n          }\\n          },\\n          computed:{\\n          validName(){\\n          return (this.valMultipe.value1.length > 0 && this.valMultipe.value2.length > 0)\\n          }\\n          },\\n          methods:{\\n          acceptAlert(color){\\n          this.$vs.notify({\\n          color:'success',\\n          title:'Accept Selected',\\n          text:'Lorem ipsum dolor sit amet, consectetur'\\n          })\\n          },\\n          close(){\\n          this.$vs.notify({\\n          color:'danger',\\n          title:'Closed',\\n          text:'You close a dialog!'\\n          })\\n          },\\n          }\\n          }\\n          </script>\\n        \")])],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <vs-row vs-justify=\"center\">\n    <vs-col type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-lg=\"12\" vs-xs=\"12\">\n      <!--\n        /////////////////\n        With Alert\n        /////////////////\n      -->\n      <vs-card>\n        <h3 class=\"card-title d-flex\">\n          With Alert\n          <vs-button class=\"ml-auto p-0\" @click=\"defaultalert=true\" type=\"line\">\n            <vs-icon icon=\"code\"></vs-icon>\n          </vs-button>\n        </h3>\n        <p class=\"card-subtitle\">\n          To generate a dialog we have the global function\n          <code>$vs.dialog</code> the parameters to generate the dialog are\n        </p>\n\n        <vs-row>\n          <vs-col vs-lg=\"8\" vs-xs=\"12\">\n            <vs-list>\n              <vs-list-item title=\"title\" subtitle=\"title of the dialogue - String\"></vs-list-item>\n              <vs-list-item title=\"text\" subtitle=\"internal text of the dialog - String\"></vs-list-item>\n              <vs-list-item title=\"color\" subtitle=\"color of the component - Colors, RGB, HEX\"></vs-list-item>\n              <vs-list-item\n                title=\"accept\"\n                subtitle=\"function that executes the user accept the dialog - Function\"\n              ></vs-list-item>\n              <vs-list-item\n                title=\"cancel\"\n                subtitle=\"function that executes the user to cancel the dialog (if it is a confirm type) - Function\"\n              ></vs-list-item>\n              <vs-list-item\n                title=\"type\"\n                subtitle=\"determines the type of dialog (alert or confirm) - alert, confirm\"\n              ></vs-list-item>\n              <vs-list-item\n                title=\"buttonAccept\"\n                subtitle=\"determines the type of accept button - Boolean\"\n              ></vs-list-item>\n              <vs-list-item\n                title=\"buttonCancel\"\n                subtitle=\"determines the type of cancel button - Boolean\"\n              ></vs-list-item>\n            </vs-list>\n          </vs-col>\n        </vs-row>\n\n        <div class=\"m-3 btn-alignment\">\n          <vs-button @click=\"openAlert('primary')\" color=\"primary\" type=\"flat\">Alert Primary</vs-button>\n          <vs-button @click=\"openAlert('success')\" color=\"success\" type=\"flat\">Alert Success</vs-button>\n          <vs-button @click=\"openAlert('danger')\" color=\"danger\" type=\"flat\">Alert Danger</vs-button>\n          <vs-button @click=\"openAlert('warning')\" color=\"warning\" type=\"flat\">Alert Warning</vs-button>\n          <vs-button @click=\"openAlert('dark')\" color=\"dark\" type=\"flat\">Alert Dark</vs-button>\n          <vs-button @click=\"openAlert(null)\" color=\"primary\" type=\"gradient\">Alert Color RGB | HEX</vs-button>\n        </div>\n\n        <!-- Code -->\n        <vs-popup class=\"holamundo\" title=\"Code\" :active.sync=\"defaultalert\">\n          <vs-prism>\n            &lt;div class=&quot;m-3 btn-alignment&quot;&gt;\n            &lt;vs-button @click=&quot;openAlert('primary')&quot; color=&quot;primary&quot; type=&quot;flat&quot;&gt;Alert Primary&lt;/vs-button&gt;\n            &lt;vs-button @click=&quot;openAlert('success')&quot; color=&quot;success&quot; type=&quot;flat&quot;&gt;Alert Success&lt;/vs-button&gt;\n            &lt;vs-button @click=&quot;openAlert('danger')&quot; color=&quot;danger&quot; type=&quot;flat&quot;&gt;Alert Danger&lt;/vs-button&gt;\n            &lt;vs-button @click=&quot;openAlert('warning')&quot; color=&quot;warning&quot; type=&quot;flat&quot;&gt;Alert Warning&lt;/vs-button&gt;\n            &lt;vs-button @click=&quot;openAlert('dark')&quot; color=&quot;dark&quot; type=&quot;flat&quot;&gt;Alert Dark&lt;/vs-button&gt;\n            &lt;vs-button @click=&quot;openAlert(null)&quot; color=&quot;primary&quot; type=&quot;gradient&quot;&gt;Alert Color RGB | HEX&lt;/vs-button&gt;\n            &lt;/div&gt;\n            &lt;script&gt;\n            export default {\n            data:()=&gt;({\n            colorAlert:'primary',\n            titleAlert:'Alert',\n            activeAlert:false,\n            valueInput:'',\n            }),\n            methods:{\n            openAlert(color){\n            this.colorAlert = color || this.getColorRandom()\n            this.$vs.dialog({\n            color:this.colorAlert,\n            title: `Dialog - ${this.colorAlert}`,\n            text: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.',\n            accept:this.acceptAlert\n            })\n            },\n            acceptAlert(){\n            this.$vs.notify({\n            color:this.colorAlert,\n            title:'Accept Selected',\n            text:'Lorem ipsum dolor sit amet, consectetur'\n            })\n            },\n            getColorRandom(){\n            function getRandomInt(min, max) {\n            return Math.floor(Math.random() * (max - min)) + min;\n            }\n            return `rgb(${getRandomInt(0,255)},${getRandomInt(0,255)},${getRandomInt(0,255)})`\n            },\n            }\n            }\n            &lt;/script&gt;\n          </vs-prism>\n        </vs-popup>\n        <!-- Code -->\n      </vs-card>\n\n      <!--\n        /////////////////\n        With Confirm Alert\n        /////////////////\n      -->\n      <vs-card>\n        <h3 class=\"card-title d-flex\">\n          With Confirm Alert\n          <vs-button class=\"ml-auto p-0\" @click=\"confirmalert=true\" type=\"line\">\n            <vs-icon icon=\"code\"></vs-icon>\n          </vs-button>\n        </h3>\n        <p\n          class=\"card-subtitle\"\n        >If you need a dialog of type confirm you can do it just by changing the type as a parameter inside the main function.</p>\n\n        <div>\n          <vs-button @click=\"openConfirm()\" color=\"primary\" type=\"gradient\">Alert Primary</vs-button>\n        </div>\n\n        <!-- Code -->\n        <vs-popup class=\"holamundo\" title=\"Code\" :active.sync=\"confirmalert\">\n          <vs-prism>\n            &lt;div&gt;\n            &lt;vs-button @click=&quot;openConfirm()&quot; color=&quot;danger&quot; type=&quot;gradient&quot;&gt;Alert Primary&lt;/vs-button&gt;\n            &lt;/div&gt;\n            &lt;script&gt;\n            export default {\n            data: () =&gt; ({\n            activeConfirm: false\n            }),\n            methods: {\n            openConfirm() {\n            this.$vs.dialog({\n            type: 'confirm',\n            color: 'danger',\n            title: `Confirm`,\n            text: 'Cake sesame snaps cupcake gingerbread danish I love gingerbread. Apple pie pie jujubes chupa chups.',\n            accept: this.acceptAlert\n            })\n            },\n            acceptAlert() {\n            this.$vs.notify({\n            color: 'danger',\n            title: 'Deleted image',\n            text: 'The selected image was successfully deleted'\n            })\n            },\n            }\n            }\n            &lt;/script&gt;\n          </vs-prism>\n        </vs-popup>\n        <!-- Code -->\n      </vs-card>\n\n      <!--\n        /////////////////\n        With Promt Alert\n        /////////////////\n      -->\n      <vs-card>\n        <h3 class=\"card-title d-flex\">\n          With Promt Alert\n          <vs-button class=\"ml-auto p-0\" @click=\"promtalert=true\" type=\"line\">\n            <vs-icon icon=\"code\"></vs-icon>\n          </vs-button>\n        </h3>\n        <p class=\"card-subtitle\">\n          To add a dialog of type prompt we have a global function a completely independent component\n          <code>vs-prompt</code>. This allows more flexibility with the input and ability to add any type of input and components.\n        </p>\n\n        <vs-row>\n          <vs-col vs-lg=\"6\" vs-xs=\"12\">\n            <div class=\"d-flex align-items-center\">\n              <vs-button @click=\"activePrompt = true\" color=\"primary\" type=\"border\">Run prompt</vs-button>\n              <div class=\"modelx bg-light p-3 shadow ml-3 rounded-pill\">\n                <span\n                  class=\"text-primary font-weight-bold border-bottom pb-1 border-primary mr-3\"\n                >Security Code Here:</span>\n                {{val==null?'null':val}}\n              </div>\n            </div>\n          </vs-col>\n          <vs-col vs-lg=\"6\" vs-xs=\"12\">\n            <div class=\"d-flex align-items-center\">\n              <vs-button\n                @click=\"activePrompt2 = true\"\n                color=\"primary\"\n                type=\"border\"\n              >Run prompt inputs</vs-button>\n              <div class=\"modelx bg-light p-3 shadow ml-3 rounded-pill\">\n                <span\n                  class=\"text-primary font-weight-bold border-bottom pb-1 border-primary mr-3\"\n                >Name Here:</span>\n                <span class=\"mr-3 border-right pr-3\">{{valMultipe.value1}}</span>\n\n                <span\n                  class=\"text-primary font-weight-bold border-bottom pb-1 border-primary mr-3\"\n                >Last Name Here:</span>\n                {{valMultipe.value2}}\n              </div>\n            </div>\n          </vs-col>\n        </vs-row>\n\n        <vs-prompt\n          @cancel=\"val=''\"\n          @accept=\"acceptAlert3\"\n          @close=\"close\"\n          :active.sync=\"activePrompt\"\n        >\n          <div class=\"p-2 pb-0\">\n            Enter the security code\n            <vs-input placeholder=\"Code\" class=\"mb-3\" v-model=\"val\" />\n            <vs-select class=\"selectExample\" label=\"Figuras\" v-model=\"select1\">\n              <vs-select-item\n                :key=\"index\"\n                :value=\"item.value\"\n                :text=\"item.text\"\n                v-for=\"(item,index) in options1\"\n              />\n            </vs-select>\n          </div>\n        </vs-prompt>\n\n        <vs-prompt\n          color=\"danger\"\n          @cancel=\"valMultipe.value1='',valMultipe.value2=''\"\n          @accept=\"acceptAlert3\"\n          @close=\"close\"\n          :is-valid=\"validName\"\n          :active.sync=\"activePrompt2\"\n        >\n          <div class=\"con-exemple-prompt\">\n            Enter your first and last name to\n            <b>continue</b>.\n            <vs-input placeholder=\"Name\" class=\"mb-3\" v-model=\"valMultipe.value1\" />\n            <vs-input placeholder=\"Last Name\" class=\"mb-3\" v-model=\"valMultipe.value2\" />\n\n            <vs-alert\n              :active=\"!validName\"\n              color=\"danger\"\n              icon=\"new_releases\"\n            >Fields can not be empty please enter the data</vs-alert>\n          </div>\n        </vs-prompt>\n\n        <!-- Code -->\n        <vs-popup class=\"holamundo\" title=\"Code\" :active.sync=\"promtalert\">\n          <vs-prism>\n            &lt;template lang=&quot;html&quot;&gt;\n            &lt;div class=&quot;centerx con-exemple-prompt&quot;&gt;\n            &lt;!-- &lt;vs-button @click=&quot;openPrompt&quot; color=&quot;primary&quot; type=&quot;border&quot;&gt;Run prompt&lt;/vs-button&gt; --&gt;\n            &lt;div class=&quot;modelx&quot;&gt;\n            {{val==null?'null':val}}\n            &lt;/div&gt;\n            &lt;vs-button @click=&quot;activePrompt = true&quot; color=&quot;primary&quot; type=&quot;border&quot;&gt;Run prompt&lt;/vs-button&gt;\n            &lt;div class=&quot;modelx&quot;&gt;\n            {{valMultipe.value1}}\n            {{valMultipe.value2}}\n            &lt;/div&gt;\n            &lt;vs-button @click=&quot;activePrompt2 = true&quot; color=&quot;primary&quot; type=&quot;border&quot;&gt;Run prompt inputs&lt;/vs-button&gt;\n            &lt;vs-prompt\n            @cancel=&quot;val=''&quot;\n            @accept=&quot;acceptAlert&quot;\n            @close=&quot;close&quot;\n            :active.sync=&quot;activePrompt&quot;&gt;\n            &lt;div class=&quot;con-exemple-prompt&quot;&gt;\n            Enter the security code\n            &lt;vs-input placeholder=&quot;Code&quot; placeholder=&quot;Code&quot; v-model=&quot;val&quot;/&gt;\n            &lt;vs-select\n            class=&quot;selectExample&quot;\n            label=&quot;Figuras&quot;\n            v-model=&quot;select1&quot;\n            &gt;\n            &lt;vs-select-item :key=&quot;index&quot; :value=&quot;item.value&quot; :text=&quot;item.text&quot; v-for=&quot;item,index in options1&quot; /&gt;\n            &lt;/vs-select&gt;\n            &lt;/div&gt;\n            &lt;/vs-prompt&gt;\n            &lt;vs-prompt\n            color=&quot;danger&quot;\n            @cancel=&quot;valMultipe.value1='',valMultipe.value2=''&quot;\n            @accept=&quot;acceptAlert&quot;\n            @close=&quot;close&quot;\n            :is-valid=&quot;validName&quot;\n            :active.sync=&quot;activePrompt2&quot;&gt;\n            &lt;div class=&quot;con-exemple-prompt&quot;&gt;\n            Enter your first and last name to &lt;b&gt;continue&lt;/b&gt;.\n            &lt;vs-input placeholder=&quot;Name&quot; v-model=&quot;valMultipe.value1&quot;/&gt;\n            &lt;vs-input placeholder=&quot;Last Name&quot; v-model=&quot;valMultipe.value2&quot;/&gt;\n            &lt;vs-alert :active=&quot;!validName&quot; color=&quot;danger&quot; icon=&quot;new_releases&quot; &gt;\n            Fields can not be empty please enter the data\n            &lt;/vs-alert&gt;\n            &lt;/div&gt;\n            &lt;/vs-prompt&gt;\n            &lt;/div&gt;\n            &lt;/template&gt;\n            &lt;script&gt;\n            import Vue from 'vue'\n            export default {\n            data(){\n            return {\n            select1:2,\n            options1:[\n            {text:'IT',value:0},\n            {text:'Blade Runner',value:2},\n            {text:'Thor Ragnarok',value:3},\n            ],\n            activePrompt:false,\n            activePrompt2:false,\n            val:'',\n            valMultipe:{\n            value1:'',\n            value2:''\n            },\n            }\n            },\n            computed:{\n            validName(){\n            return (this.valMultipe.value1.length &gt; 0 &amp;&amp; this.valMultipe.value2.length &gt; 0)\n            }\n            },\n            methods:{\n            acceptAlert(color){\n            this.$vs.notify({\n            color:'success',\n            title:'Accept Selected',\n            text:'Lorem ipsum dolor sit amet, consectetur'\n            })\n            },\n            close(){\n            this.$vs.notify({\n            color:'danger',\n            title:'Closed',\n            text:'You close a dialog!'\n            })\n            },\n            }\n            }\n            &lt;/script&gt;\n          </vs-prism>\n        </vs-popup>\n        <!-- Code -->\n      </vs-card>\n    </vs-col>\n  </vs-row>\n</template>\n\n<script>\nexport default {\n  name: \"dialog\",\n  data: () => ({\n    title: \"Dialog\",\n    defaultalert: false,\n    colorAlert: \"primary\",\n    titleAlert: \"Alert\",\n    activeAlert: false,\n    valueInput: \"\",\n    activeConfirm: false,\n    confirmalert: false,\n    select1: 2,\n    options1: [\n      { text: \"IT\", value: 0 },\n      { text: \"Blade Runner\", value: 2 },\n      { text: \"Thor Ragnarok\", value: 3 }\n    ],\n    activePrompt: false,\n    activePrompt2: false,\n    val: \"\",\n    valMultipe: {\n      value1: \"\",\n      value2: \"\"\n    },\n    promtalert: false\n  }),\n  computed: {\n    validName() {\n      return (\n        this.valMultipe.value1.length > 0 && this.valMultipe.value2.length > 0\n      );\n    }\n  },\n  methods: {\n    openAlert(color) {\n      this.colorAlert = color || this.getColorRandom();\n      this.$vs.dialog({\n        color: this.colorAlert,\n        title: `Dialog - ${this.colorAlert}`,\n        text:\n          \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\",\n        accept: this.acceptAlert\n      });\n    },\n    acceptAlert() {\n      this.$vs.notify({\n        color: this.colorAlert,\n        title: \"Accept Selected\",\n        text: \"Lorem ipsum dolor sit amet, consectetur\"\n      });\n    },\n    getColorRandom() {\n      function getRandomInt(min, max) {\n        return Math.floor(Math.random() * (max - min)) + min;\n      }\n      return `rgb(${getRandomInt(0, 255)},${getRandomInt(\n        0,\n        255\n      )},${getRandomInt(0, 255)})`;\n    },\n    openConfirm() {\n      this.$vs.dialog({\n        type: \"confirm\",\n        color: \"primary\",\n        title: `Confirm`,\n        text:\n          \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\",\n        accept: this.acceptAlert2\n      });\n    },\n    acceptAlert2() {\n      this.$vs.notify({\n        color: \"primary\",\n        title: \"Deleted image\",\n        text: \"The selected image was successfully deleted\"\n      });\n    },\n    acceptAlert3() {\n      this.$vs.notify({\n        color: \"success\",\n        title: \"Accept Selected\",\n        text: \"Lorem ipsum dolor sit amet, consectetur\"\n      });\n    },\n    close() {\n      this.$vs.notify({\n        color: \"danger\",\n        title: \"Closed\",\n        text: \"You close a dialog!\"\n      });\n    }\n  }\n};\n</script>\n\n\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./dialog.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./dialog.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./dialog.vue?vue&type=template&id=6a741af4&\"\nimport script from \"./dialog.vue?vue&type=script&lang=js&\"\nexport * from \"./dialog.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}