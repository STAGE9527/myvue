{"version":3,"sources":["webpack:///./src/views/components/vuesax/notification/notification.vue?4e4d","webpack:///src/views/components/vuesax/notification/notification.vue","webpack:///./src/views/components/vuesax/notification/notification.vue?c159","webpack:///./src/views/components/vuesax/notification/notification.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","staticClass","_v","on","$event","defaultnotification","$vs","notify","title","text","color","random","posnotification","position","randomCenter","iconnotification","icon","randomIcon","funnotification","myFunction","timenotification","time","staticRenderFns","name","data","methods","getRandomInt","min","max","Math","floor","fixed","click","component"],"mappings":"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","file":"js/chunk-2d0c0ab4.5c1126d1.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('vs-row',{attrs:{\"vs-justify\":\"center\"}},[_c('vs-col',{attrs:{\"type\":\"flex\",\"vs-justify\":\"center\",\"vs-align\":\"center\",\"vs-lg\":\"12\",\"vs-xs\":\"12\"}},[_c('vs-card',[_c('h3',{staticClass:\"card-title d-flex\"},[_vm._v(\"\\n        Default Notification\\n        \"),_c('vs-button',{staticClass:\"ml-auto p-0\",attrs:{\"type\":\"line\"},on:{\"click\":function($event){_vm.defaultnotification=true}}},[_c('vs-icon',{attrs:{\"icon\":\"code\"}})],1)],1),_c('p',{staticClass:\"card-subtitle\"},[_vm._v(\"\\n        To add a notification we have the global function\\n        \"),_c('code',[_vm._v(\"$vs.notify\")]),_vm._v(\". The first parameter is a json with all the necessary attributes, or if we only want the standard notification we can only add a string with the text of the notification.\\n      \")]),_c('div',{staticClass:\"btn-alignment\"},[_c('vs-button',{attrs:{\"color\":\"primary\",\"type\":\"flat\"},on:{\"click\":function($event){return _vm.$vs.notify({title:'Primary',text:'Lorem ipsum dolor sit amet, consectetur',color:'primary'})}}},[_vm._v(\"Notification Primary\")]),_c('vs-button',{attrs:{\"color\":\"success\",\"type\":\"flat\"},on:{\"click\":function($event){return _vm.$vs.notify({title:'Success',text:'Lorem ipsum dolor sit amet, consectetur',color:'success'})}}},[_vm._v(\"Notification Success\")]),_c('vs-button',{attrs:{\"color\":\"danger\",\"type\":\"flat\"},on:{\"click\":function($event){return _vm.$vs.notify({title:'Danger',text:'Lorem ipsum dolor sit amet, consectetur',color:'danger'})}}},[_vm._v(\"Notification Danger\")]),_c('vs-button',{attrs:{\"color\":\"warning\",\"type\":\"flat\"},on:{\"click\":function($event){return _vm.$vs.notify({title:'Warning',text:'Lorem ipsum dolor sit amet, consectetur',color:'warning'})}}},[_vm._v(\"Notification Warning\")]),_c('vs-button',{attrs:{\"color\":\"dark\",\"type\":\"flat\"},on:{\"click\":function($event){return _vm.$vs.notify({title:'dark',text:'Lorem ipsum dolor sit amet, consectetur',color:'dark'})}}},[_vm._v(\"Notification Dark\")]),_c('vs-button',{attrs:{\"color\":\"success\",\"type\":\"gradient\"},on:{\"click\":function($event){return _vm.random()}}},[_vm._v(\"Notification Random Color\")])],1),_c('vs-popup',{staticClass:\"holamundo\",attrs:{\"title\":\"Code\",\"active\":_vm.defaultnotification},on:{\"update:active\":function($event){_vm.defaultnotification=$event}}},[_c('vs-prism',[_vm._v(\"\\n          <template lang=\\\"html\\\">\\n          <div class=\\\"con-notifications\\\">\\n          <vs-button @click=\\\"$vs.notify({title:'Default',text:'Lorem ipsum dolor sit amet, consectetur'})\\\" color=\\\"primary\\\" type=\\\"border\\\">Notification white</vs-button>\\n          <vs-button @click=\\\"$vs.notify({title:'Primary',text:'Lorem ipsum dolor sit amet, consectetur',color:'primary'})\\\" color=\\\"primary\\\" type=\\\"flat\\\">Notification Primary</vs-button>\\n          <vs-button @click=\\\"$vs.notify({title:'Success',text:'Lorem ipsum dolor sit amet, consectetur',color:'success'})\\\" color=\\\"success\\\" type=\\\"flat\\\">Notification Success</vs-button>\\n          <vs-button @click=\\\"$vs.notify({title:'Danger',text:'Lorem ipsum dolor sit amet, consectetur',color:'danger'})\\\" color=\\\"danger\\\" type=\\\"flat\\\">Notification Danger</vs-button>\\n          <vs-button @click=\\\"$vs.notify({title:'Warning',text:'Lorem ipsum dolor sit amet, consectetur',color:'warning'})\\\" color=\\\"warning\\\" type=\\\"flat\\\">Notification Warning</vs-button>\\n          <vs-button @click=\\\"$vs.notify({title:'dark',text:'Lorem ipsum dolor sit amet, consectetur',color:'dark'})\\\" color=\\\"dark\\\" type=\\\"flat\\\">Notification Dark</vs-button>\\n          <vs-button @click=\\\"random()\\\" color=\\\"success\\\" type=\\\"gradient\\\">Notification Random Color</vs-button>\\n          </div>\\n          </template>\\n          <script>\\n          export default {\\n          methods:{\\n          random(){\\n          function getRandomInt(min, max) {\\n          return Math.floor(Math.random() * (max - min)) + min;\\n          }\\n          let color = `rgb(${getRandomInt(0,255)},${getRandomInt(0,255)},${getRandomInt(0,255)})`\\n          this.$vs.notify({\\n          title:'Color',\\n          text:'Lorem ipsum dolor sit amet, consectetur',\\n          color:color\\n          })\\n          },\\n          }\\n          }\\n          </script>\\n        \")])],1)],1),_c('vs-card',[_c('h3',{staticClass:\"card-title d-flex\"},[_vm._v(\"\\n        Notification Position\\n        \"),_c('vs-button',{staticClass:\"ml-auto p-0\",attrs:{\"type\":\"line\"},on:{\"click\":function($event){_vm.posnotification=true}}},[_c('vs-icon',{attrs:{\"icon\":\"code\"}})],1)],1),_c('p',{staticClass:\"card-subtitle\"},[_vm._v(\"\\n        We can change the place where the notification appears with the property\\n        \"),_c('code',[_vm._v(\"position\")]),_vm._v(\". A practical example would be:\\n        \"),_c('code',[_vm._v(\"position: 'top-right'\")]),_vm._v(\". The supported values are:\\n      \")]),_c('ul',{staticClass:\"list-group list-group-horizontal-lg mb-3\"},[_c('li',{staticClass:\"list-group-item rounded-0 py-2\"},[_c('span',[_vm._v(\"top-right\")])]),_c('li',{staticClass:\"list-group-item rounded-0 py-2\"},[_c('span',[_vm._v(\"top-left\")])]),_c('li',{staticClass:\"list-group-item rounded-0 py-2\"},[_c('span',[_vm._v(\"bottom-left\")])]),_c('li',{staticClass:\"list-group-item rounded-0 py-2\"},[_c('span',[_vm._v(\"bottom-center\")])]),_c('li',{staticClass:\"list-group-item rounded-0 py-2\"},[_c('span',[_vm._v(\"top-center\")])])]),_c('div',{staticClass:\"btn-alignment\"},[_c('vs-button',{attrs:{\"color\":\"primary\",\"type\":\"flat\"},on:{\"click\":function($event){return _vm.$vs.notify({title:'Position Default',text:'Lorem ipsum dolor sit amet, consectetur',color:'primary'})}}},[_vm._v(\"Position Default\")]),_c('vs-button',{attrs:{\"color\":\"success\",\"type\":\"flat\"},on:{\"click\":function($event){return _vm.$vs.notify({title:'Position top-right',text:'Lorem ipsum dolor sit amet, consectetur',color:'success',position:'top-right'})}}},[_vm._v(\"Position Top Right\")]),_c('vs-button',{attrs:{\"color\":\"danger\",\"type\":\"flat\"},on:{\"click\":function($event){return _vm.$vs.notify({title:'Position top-left',text:'Lorem ipsum dolor sit amet, consectetur',color:'danger',position:'top-left'})}}},[_vm._v(\"Position Top Left\")]),_c('vs-button',{attrs:{\"color\":\"warning\",\"type\":\"flat\"},on:{\"click\":function($event){return _vm.$vs.notify({title:'Position bottom-left',text:'Lorem ipsum dolor sit amet, consectetur',color:'warning',position:'bottom-left'})}}},[_vm._v(\"Position Bottom Left\")]),_c('vs-button',{attrs:{\"color\":\"dark\",\"type\":\"flat\"},on:{\"click\":function($event){return _vm.$vs.notify({title:'Position bottom-center',text:'Lorem ipsum dolor sit amet, consectetur',color:'dark',position:'bottom-center'})}}},[_vm._v(\"Position Bottom Center\")]),_c('vs-button',{attrs:{\"color\":\"success\",\"type\":\"gradient\"},on:{\"click\":function($event){return _vm.randomCenter()}}},[_vm._v(\"Position Top Center Random Color\")])],1),_c('vs-popup',{staticClass:\"holamundo\",attrs:{\"title\":\"Code\",\"active\":_vm.posnotification},on:{\"update:active\":function($event){_vm.posnotification=$event}}},[_c('vs-prism',[_vm._v(\"\\n          <template lang=\\\"html\\\">\\n          <div class=\\\"con-notifications-position\\\">\\n          <vs-button @click=\\\"$vs.notify({title:'Position Default',text:'Lorem ipsum dolor sit amet, consectetur',color:'primary'})\\\" color=\\\"primary\\\" type=\\\"flat\\\">Position Default</vs-button>\\n          <vs-button @click=\\\"$vs.notify({title:'Position top-right',text:'Lorem ipsum dolor sit amet, consectetur',color:'success',position:'top-right'})\\\" color=\\\"success\\\" type=\\\"flat\\\">Position Top Right</vs-button>\\n          <vs-button @click=\\\"$vs.notify({title:'Position top-left',text:'Lorem ipsum dolor sit amet, consectetur',color:'danger',position:'top-left'})\\\" color=\\\"danger\\\" type=\\\"flat\\\">Position Top Left</vs-button>\\n          <vs-button @click=\\\"$vs.notify({title:'Position bottom-left',text:'Lorem ipsum dolor sit amet, consectetur',color:'warning',position:'bottom-left'})\\\" color=\\\"warning\\\" type=\\\"flat\\\">Position Bottom Left</vs-button>\\n          <vs-button @click=\\\"$vs.notify({title:'Position bottom-center',text:'Lorem ipsum dolor sit amet, consectetur',color:'dark',position:'bottom-center'})\\\" color=\\\"dark\\\" type=\\\"flat\\\"> Position Bottom Center</vs-button>\\n          <vs-button @click=\\\"randomCenter()\\\" color=\\\"success\\\" type=\\\"gradient\\\">Position Top Center Random Color</vs-button>\\n          </div>\\n          </template>\\n          <script>\\n          export default {\\n          methods:{\\n          randomCenter(){\\n          function getRandomInt(min, max) {\\n          return Math.floor(Math.random() * (max - min)) + min;\\n          }\\n          let color = `rgb(${getRandomInt(0,255)},${getRandomInt(0,255)},${getRandomInt(0,255)})`\\n          this.$vs.notify({title:'Position top-center',text:'Lorem ipsum dolor sit amet, consectetur',color:color,position:'top-center'})\\n          }\\n          }\\n          }\\n          </script>\\n        \")])],1)],1),_c('vs-card',[_c('h3',{staticClass:\"card-title d-flex\"},[_vm._v(\"\\n        Notification Icon\\n        \"),_c('vs-button',{staticClass:\"ml-auto p-0\",attrs:{\"type\":\"line\"},on:{\"click\":function($event){_vm.iconnotification=true}}},[_c('vs-icon',{attrs:{\"icon\":\"code\"}})],1)],1),_c('p',{staticClass:\"card-subtitle\"},[_vm._v(\"\\n        Notifications can include icons to improve the user experience and to construct a more pleasant and intuitive notification. To make this, use the\\n        \"),_c('code',[_vm._v(\"icon\")]),_vm._v(\" property. A practical example would be:\\n        \"),_c('code',[_vm._v(\"icon: 'chat'\")]),_vm._v(\".\\n      \")]),_c('div',{staticClass:\"btn-alignment\"},[_c('vs-button',{attrs:{\"color\":\"primary\",\"type\":\"flat\"},on:{\"click\":function($event){return _vm.$vs.notify({title:'Icon mail',text:'Lorem ipsum dolor sit amet, consectetur',color:'primary',icon:'mail'})}}},[_vm._v(\"Icon Mail\")]),_c('vs-button',{attrs:{\"color\":\"success\",\"type\":\"flat\"},on:{\"click\":function($event){return _vm.$vs.notify({title:'Icon mail',text:'Lorem ipsum dolor sit amet, consectetur',color:'success',icon:'check_box'})}}},[_vm._v(\"Icon check_box\")]),_c('vs-button',{attrs:{\"color\":\"danger\",\"type\":\"flat\"},on:{\"click\":function($event){return _vm.$vs.notify({title:'Icon mail',text:'Lorem ipsum dolor sit amet, consectetur',color:'danger',icon:'favorite'})}}},[_vm._v(\"Icon favorite\")]),_c('vs-button',{attrs:{\"color\":\"warning\",\"type\":\"flat\"},on:{\"click\":function($event){return _vm.$vs.notify({title:'Icon mail',text:'Lorem ipsum dolor sit amet, consectetur',color:'warning',icon:'error'})}}},[_vm._v(\"Icon error\")]),_c('vs-button',{attrs:{\"color\":\"dark\",\"type\":\"flat\"},on:{\"click\":function($event){return _vm.$vs.notify({title:'Icon mail',text:'Lorem ipsum dolor sit amet, consectetur',color:'dark',icon:'chat'})}}},[_vm._v(\"Icon chat\")]),_c('vs-button',{attrs:{\"color\":\"success\",\"type\":\"gradient\"},on:{\"click\":function($event){return _vm.randomIcon()}}},[_vm._v(\"Icon Random Color\")])],1),_c('vs-popup',{staticClass:\"holamundo\",attrs:{\"title\":\"Code\",\"active\":_vm.iconnotification},on:{\"update:active\":function($event){_vm.iconnotification=$event}}},[_c('vs-prism',[_vm._v(\"\\n          <template lang=\\\"html\\\">\\n          <div class=\\\"centerx\\\">\\n          <vs-button @click=\\\"$vs.notify({title:'Icon mail',text:'Lorem ipsum dolor sit amet, consectetur',color:'primary',icon:'mail'})\\\" color=\\\"primary\\\" type=\\\"flat\\\">Icon Mail</vs-button>\\n          <vs-button @click=\\\"$vs.notify({title:'Icon mail',text:'Lorem ipsum dolor sit amet, consectetur',color:'success',icon:'check_box'})\\\" color=\\\"success\\\" type=\\\"flat\\\">Icon check_box</vs-button>\\n          <vs-button @click=\\\"$vs.notify({title:'Icon mail',text:'Lorem ipsum dolor sit amet, consectetur',color:'danger',icon:'favorite'})\\\" color=\\\"danger\\\" type=\\\"flat\\\">Icon favorite</vs-button>\\n          <vs-button @click=\\\"$vs.notify({title:'Icon mail',text:'Lorem ipsum dolor sit amet, consectetur',color:'warning',icon:'error'})\\\" color=\\\"warning\\\" type=\\\"flat\\\">Icon error</vs-button>\\n          <vs-button @click=\\\"$vs.notify({title:'Icon mail',text:'Lorem ipsum dolor sit amet, consectetur',color:'dark',icon:'chat'})\\\" color=\\\"dark\\\" type=\\\"flat\\\">Icon chat</vs-button>\\n          <vs-button @click=\\\"randomIcon()\\\" color=\\\"success\\\" type=\\\"gradient\\\">Icon Random Color</vs-button>\\n          </div>\\n          </template>\\n          <script>\\n          export default {\\n          methods:{\\n          randomIcon(){\\n          function getRandomInt(min, max) {\\n          return Math.floor(Math.random() * (max - min)) + min;\\n          }\\n          let color = `rgb(${getRandomInt(0,255)},${getRandomInt(0,255)},${getRandomInt(0,255)})`\\n          this.$vs.notify({title:'Icon mail',text:'Lorem ipsum dolor sit amet, consectetur',color:color,icon:'verified_user'})\\n          }\\n          }\\n          }\\n          </script>\\n        \")])],1)],1),_c('vs-card',[_c('h3',{staticClass:\"card-title d-flex\"},[_vm._v(\"\\n        Fixed and Function click\\n        \"),_c('vs-button',{staticClass:\"ml-auto p-0\",attrs:{\"type\":\"line\"},on:{\"click\":function($event){_vm.funnotification=true}}},[_c('vs-icon',{attrs:{\"icon\":\"code\"}})],1)],1),_c('p',{staticClass:\"card-subtitle\"},[_vm._v(\"\\n        Sometimes we need to execute a function when the user clicks on the notification. For this, pass a function to the click property. Example:\\n        \"),_c('code',[_vm._v(\"click:()=>{ ... }\")])]),_c('div',{staticClass:\"btn-alignment\"},[_c('vs-button',{attrs:{\"type\":\"flat\"},on:{\"click\":function($event){return _vm.myFunction()}}},[_vm._v(\"Run Example\")])],1),_c('vs-popup',{staticClass:\"holamundo\",attrs:{\"title\":\"Code\",\"active\":_vm.funnotification},on:{\"update:active\":function($event){_vm.funnotification=$event}}},[_c('vs-prism',[_vm._v(\"\\n          <template lang=\\\"html\\\">\\n          <div class=\\\"centerx\\\">\\n          <vs-button @click=\\\"myFunction()\\\" type=\\\"flat\\\">Run Example</vs-button>\\n          </div>\\n          </template>\\n          <script>\\n          export default {\\n          methods:{\\n          myFunction(){\\n          this.$vs.notify({\\n          title:'Function click',\\n          text:'Click on me',\\n          color:'primary',\\n          fixed:true,\\n          click:()=>{\\n          // Secondary function\\n          this.$vs.notify({\\n          title:'Secondary function',\\n          text:'Executed the function when clicking',\\n          color:'success',\\n          icon:'check_box'\\n          })\\n          },\\n          })\\n          },\\n          }\\n          }\\n          </script>\\n        \")])],1)],1),_c('vs-card',[_c('h3',{staticClass:\"card-title d-flex\"},[_vm._v(\"\\n        Time Notification\\n        \"),_c('vs-button',{staticClass:\"ml-auto p-0\",attrs:{\"type\":\"line\"},on:{\"click\":function($event){_vm.timenotification=true}}},[_c('vs-icon',{attrs:{\"icon\":\"code\"}})],1)],1),_c('p',{staticClass:\"card-subtitle\"},[_vm._v(\"\\n        You can change the total time that the notification stays on the screen with the time property. Example:\\n        \"),_c('code',[_vm._v(\"time: 4000\")]),_vm._v(\".\\n      \")]),_c('div',{staticClass:\"btn-alignment\"},[_c('vs-button',{attrs:{\"color\":\"primary\",\"type\":\"flat\"},on:{\"click\":function($event){return _vm.$vs.notify({\n                title:'Time default',\n                text:'Lorem ipsum dolor sit amet consectetur',\n                color:'primary',\n                icon:'query_builder'\n              })}}},[_vm._v(\"Time default\")]),_c('vs-button',{attrs:{\"color\":\"primary\",\"type\":\"flat\"},on:{\"click\":function($event){_vm.$vs.notify({\n                time:4000,\n                title:'Time 4s (4000)',\n                text:'Lorem ipsum dolor sit amet consectetur',\n                color:'primary',\n                icon:'query_builder'\n              })}}},[_vm._v(\"Time 4s (4000)\")]),_c('vs-button',{attrs:{\"color\":\"primary\",\"type\":\"flat\"},on:{\"click\":function($event){_vm.$vs.notify({\n                time:8000,\n                title:'Time 8s (8000)',\n                text:'Lorem ipsum dolor sit amet consectetur',\n                color:'primary',\n                icon:'query_builder'\n              })}}},[_vm._v(\"Time 8s (8000)\")])],1),_c('vs-popup',{staticClass:\"holamundo\",attrs:{\"title\":\"Code\",\"active\":_vm.timenotification},on:{\"update:active\":function($event){_vm.timenotification=$event}}},[_c('vs-prism')],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <vs-row vs-justify=\"center\">\n    <vs-col type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-lg=\"12\" vs-xs=\"12\">\n      <!--\n        /////////////////\n        Default Notification\n        /////////////////\n      -->\n      <vs-card>\n        <h3 class=\"card-title d-flex\">\n          Default Notification\n          <vs-button class=\"ml-auto p-0\" @click=\"defaultnotification=true\" type=\"line\">\n            <vs-icon icon=\"code\"></vs-icon>\n          </vs-button>\n        </h3>\n        <p class=\"card-subtitle\">\n          To add a notification we have the global function\n          <code>$vs.notify</code>. The first parameter is a json with all the necessary attributes, or if we only want the standard notification we can only add a string with the text of the notification.\n        </p>\n\n        <div class=\"btn-alignment\">\n          <vs-button\n            @click=\"$vs.notify({title:'Primary',text:'Lorem ipsum dolor sit amet, consectetur',color:'primary'})\"\n            color=\"primary\"\n            type=\"flat\"\n          >Notification Primary</vs-button>\n          <vs-button\n            @click=\"$vs.notify({title:'Success',text:'Lorem ipsum dolor sit amet, consectetur',color:'success'})\"\n            color=\"success\"\n            type=\"flat\"\n          >Notification Success</vs-button>\n          <vs-button\n            @click=\"$vs.notify({title:'Danger',text:'Lorem ipsum dolor sit amet, consectetur',color:'danger'})\"\n            color=\"danger\"\n            type=\"flat\"\n          >Notification Danger</vs-button>\n          <vs-button\n            @click=\"$vs.notify({title:'Warning',text:'Lorem ipsum dolor sit amet, consectetur',color:'warning'})\"\n            color=\"warning\"\n            type=\"flat\"\n          >Notification Warning</vs-button>\n          <vs-button\n            @click=\"$vs.notify({title:'dark',text:'Lorem ipsum dolor sit amet, consectetur',color:'dark'})\"\n            color=\"dark\"\n            type=\"flat\"\n          >Notification Dark</vs-button>\n          <vs-button @click=\"random()\" color=\"success\" type=\"gradient\">Notification Random Color</vs-button>\n        </div>\n\n        <!-- Code -->\n        <vs-popup class=\"holamundo\" title=\"Code\" :active.sync=\"defaultnotification\">\n          <vs-prism>\n            &lt;template lang=&quot;html&quot;&gt;\n            &lt;div class=&quot;con-notifications&quot;&gt;\n            &lt;vs-button @click=&quot;$vs.notify({title:'Default',text:'Lorem ipsum dolor sit amet, consectetur'})&quot; color=&quot;primary&quot; type=&quot;border&quot;&gt;Notification white&lt;/vs-button&gt;\n            &lt;vs-button @click=&quot;$vs.notify({title:'Primary',text:'Lorem ipsum dolor sit amet, consectetur',color:'primary'})&quot; color=&quot;primary&quot; type=&quot;flat&quot;&gt;Notification Primary&lt;/vs-button&gt;\n            &lt;vs-button @click=&quot;$vs.notify({title:'Success',text:'Lorem ipsum dolor sit amet, consectetur',color:'success'})&quot; color=&quot;success&quot; type=&quot;flat&quot;&gt;Notification Success&lt;/vs-button&gt;\n            &lt;vs-button @click=&quot;$vs.notify({title:'Danger',text:'Lorem ipsum dolor sit amet, consectetur',color:'danger'})&quot; color=&quot;danger&quot; type=&quot;flat&quot;&gt;Notification Danger&lt;/vs-button&gt;\n            &lt;vs-button @click=&quot;$vs.notify({title:'Warning',text:'Lorem ipsum dolor sit amet, consectetur',color:'warning'})&quot; color=&quot;warning&quot; type=&quot;flat&quot;&gt;Notification Warning&lt;/vs-button&gt;\n            &lt;vs-button @click=&quot;$vs.notify({title:'dark',text:'Lorem ipsum dolor sit amet, consectetur',color:'dark'})&quot; color=&quot;dark&quot; type=&quot;flat&quot;&gt;Notification Dark&lt;/vs-button&gt;\n            &lt;vs-button @click=&quot;random()&quot; color=&quot;success&quot; type=&quot;gradient&quot;&gt;Notification Random Color&lt;/vs-button&gt;\n            &lt;/div&gt;\n            &lt;/template&gt;\n            &lt;script&gt;\n            export default {\n            methods:{\n            random(){\n            function getRandomInt(min, max) {\n            return Math.floor(Math.random() * (max - min)) + min;\n            }\n            let color = `rgb(${getRandomInt(0,255)},${getRandomInt(0,255)},${getRandomInt(0,255)})`\n            this.$vs.notify({\n            title:'Color',\n            text:'Lorem ipsum dolor sit amet, consectetur',\n            color:color\n            })\n            },\n            }\n            }\n            &lt;/script&gt;\n          </vs-prism>\n        </vs-popup>\n        <!-- Code -->\n      </vs-card>\n\n      <!--\n        /////////////////\n        Notification Position\n        /////////////////\n      -->\n      <vs-card>\n        <h3 class=\"card-title d-flex\">\n          Notification Position\n          <vs-button class=\"ml-auto p-0\" @click=\"posnotification=true\" type=\"line\">\n            <vs-icon icon=\"code\"></vs-icon>\n          </vs-button>\n        </h3>\n        <p class=\"card-subtitle\">\n          We can change the place where the notification appears with the property\n          <code>position</code>. A practical example would be:\n          <code>position: 'top-right'</code>. The supported values are:\n        </p>\n        <ul class=\"list-group list-group-horizontal-lg mb-3\">\n          <li class=\"list-group-item rounded-0 py-2\">\n            <span>top-right</span>\n          </li>\n          <li class=\"list-group-item rounded-0 py-2\">\n            <span>top-left</span>\n          </li>\n          <li class=\"list-group-item rounded-0 py-2\">\n            <span>bottom-left</span>\n          </li>\n          <li class=\"list-group-item rounded-0 py-2\">\n            <span>bottom-center</span>\n          </li>\n          <li class=\"list-group-item rounded-0 py-2\">\n            <span>top-center</span>\n          </li>\n        </ul>\n        <div class=\"btn-alignment\">\n          <vs-button\n            @click=\"$vs.notify({title:'Position Default',text:'Lorem ipsum dolor sit amet, consectetur',color:'primary'})\"\n            color=\"primary\"\n            type=\"flat\"\n          >Position Default</vs-button>\n          <vs-button\n            @click=\"$vs.notify({title:'Position top-right',text:'Lorem ipsum dolor sit amet, consectetur',color:'success',position:'top-right'})\"\n            color=\"success\"\n            type=\"flat\"\n          >Position Top Right</vs-button>\n          <vs-button\n            @click=\"$vs.notify({title:'Position top-left',text:'Lorem ipsum dolor sit amet, consectetur',color:'danger',position:'top-left'})\"\n            color=\"danger\"\n            type=\"flat\"\n          >Position Top Left</vs-button>\n          <vs-button\n            @click=\"$vs.notify({title:'Position bottom-left',text:'Lorem ipsum dolor sit amet, consectetur',color:'warning',position:'bottom-left'})\"\n            color=\"warning\"\n            type=\"flat\"\n          >Position Bottom Left</vs-button>\n          <vs-button\n            @click=\"$vs.notify({title:'Position bottom-center',text:'Lorem ipsum dolor sit amet, consectetur',color:'dark',position:'bottom-center'})\"\n            color=\"dark\"\n            type=\"flat\"\n          >Position Bottom Center</vs-button>\n          <vs-button\n            @click=\"randomCenter()\"\n            color=\"success\"\n            type=\"gradient\"\n          >Position Top Center Random Color</vs-button>\n        </div>\n\n        <!-- Code -->\n        <vs-popup class=\"holamundo\" title=\"Code\" :active.sync=\"posnotification\">\n          <vs-prism>\n            &lt;template lang=&quot;html&quot;&gt;\n            &lt;div class=&quot;con-notifications-position&quot;&gt;\n            &lt;vs-button @click=&quot;$vs.notify({title:'Position Default',text:'Lorem ipsum dolor sit amet, consectetur',color:'primary'})&quot; color=&quot;primary&quot; type=&quot;flat&quot;&gt;Position Default&lt;/vs-button&gt;\n            &lt;vs-button @click=&quot;$vs.notify({title:'Position top-right',text:'Lorem ipsum dolor sit amet, consectetur',color:'success',position:'top-right'})&quot; color=&quot;success&quot; type=&quot;flat&quot;&gt;Position Top Right&lt;/vs-button&gt;\n            &lt;vs-button @click=&quot;$vs.notify({title:'Position top-left',text:'Lorem ipsum dolor sit amet, consectetur',color:'danger',position:'top-left'})&quot; color=&quot;danger&quot; type=&quot;flat&quot;&gt;Position Top Left&lt;/vs-button&gt;\n            &lt;vs-button @click=&quot;$vs.notify({title:'Position bottom-left',text:'Lorem ipsum dolor sit amet, consectetur',color:'warning',position:'bottom-left'})&quot; color=&quot;warning&quot; type=&quot;flat&quot;&gt;Position Bottom Left&lt;/vs-button&gt;\n            &lt;vs-button @click=&quot;$vs.notify({title:'Position bottom-center',text:'Lorem ipsum dolor sit amet, consectetur',color:'dark',position:'bottom-center'})&quot; color=&quot;dark&quot; type=&quot;flat&quot;&gt; Position Bottom Center&lt;/vs-button&gt;\n            &lt;vs-button @click=&quot;randomCenter()&quot; color=&quot;success&quot; type=&quot;gradient&quot;&gt;Position Top Center Random Color&lt;/vs-button&gt;\n            &lt;/div&gt;\n            &lt;/template&gt;\n            &lt;script&gt;\n            export default {\n            methods:{\n            randomCenter(){\n            function getRandomInt(min, max) {\n            return Math.floor(Math.random() * (max - min)) + min;\n            }\n            let color = `rgb(${getRandomInt(0,255)},${getRandomInt(0,255)},${getRandomInt(0,255)})`\n            this.$vs.notify({title:'Position top-center',text:'Lorem ipsum dolor sit amet, consectetur',color:color,position:'top-center'})\n            }\n            }\n            }\n            &lt;/script&gt;\n          </vs-prism>\n        </vs-popup>\n        <!-- Code -->\n      </vs-card>\n\n      <!--\n        /////////////////\n        Notification Icon\n        /////////////////\n      -->\n      <vs-card>\n        <h3 class=\"card-title d-flex\">\n          Notification Icon\n          <vs-button class=\"ml-auto p-0\" @click=\"iconnotification=true\" type=\"line\">\n            <vs-icon icon=\"code\"></vs-icon>\n          </vs-button>\n        </h3>\n        <p class=\"card-subtitle\">\n          Notifications can include icons to improve the user experience and to construct a more pleasant and intuitive notification. To make this, use the\n          <code>icon</code> property. A practical example would be:\n          <code>icon: 'chat'</code>.\n        </p>\n\n        <div class=\"btn-alignment\">\n          <vs-button\n            @click=\"$vs.notify({title:'Icon mail',text:'Lorem ipsum dolor sit amet, consectetur',color:'primary',icon:'mail'})\"\n            color=\"primary\"\n            type=\"flat\"\n          >Icon Mail</vs-button>\n          <vs-button\n            @click=\"$vs.notify({title:'Icon mail',text:'Lorem ipsum dolor sit amet, consectetur',color:'success',icon:'check_box'})\"\n            color=\"success\"\n            type=\"flat\"\n          >Icon check_box</vs-button>\n          <vs-button\n            @click=\"$vs.notify({title:'Icon mail',text:'Lorem ipsum dolor sit amet, consectetur',color:'danger',icon:'favorite'})\"\n            color=\"danger\"\n            type=\"flat\"\n          >Icon favorite</vs-button>\n          <vs-button\n            @click=\"$vs.notify({title:'Icon mail',text:'Lorem ipsum dolor sit amet, consectetur',color:'warning',icon:'error'})\"\n            color=\"warning\"\n            type=\"flat\"\n          >Icon error</vs-button>\n          <vs-button\n            @click=\"$vs.notify({title:'Icon mail',text:'Lorem ipsum dolor sit amet, consectetur',color:'dark',icon:'chat'})\"\n            color=\"dark\"\n            type=\"flat\"\n          >Icon chat</vs-button>\n          <vs-button @click=\"randomIcon()\" color=\"success\" type=\"gradient\">Icon Random Color</vs-button>\n        </div>\n\n        <!-- Code -->\n        <vs-popup class=\"holamundo\" title=\"Code\" :active.sync=\"iconnotification\">\n          <vs-prism>\n            &lt;template lang=&quot;html&quot;&gt;\n            &lt;div class=&quot;centerx&quot;&gt;\n            &lt;vs-button @click=&quot;$vs.notify({title:'Icon mail',text:'Lorem ipsum dolor sit amet, consectetur',color:'primary',icon:'mail'})&quot; color=&quot;primary&quot; type=&quot;flat&quot;&gt;Icon Mail&lt;/vs-button&gt;\n            &lt;vs-button @click=&quot;$vs.notify({title:'Icon mail',text:'Lorem ipsum dolor sit amet, consectetur',color:'success',icon:'check_box'})&quot; color=&quot;success&quot; type=&quot;flat&quot;&gt;Icon check_box&lt;/vs-button&gt;\n            &lt;vs-button @click=&quot;$vs.notify({title:'Icon mail',text:'Lorem ipsum dolor sit amet, consectetur',color:'danger',icon:'favorite'})&quot; color=&quot;danger&quot; type=&quot;flat&quot;&gt;Icon favorite&lt;/vs-button&gt;\n            &lt;vs-button @click=&quot;$vs.notify({title:'Icon mail',text:'Lorem ipsum dolor sit amet, consectetur',color:'warning',icon:'error'})&quot; color=&quot;warning&quot; type=&quot;flat&quot;&gt;Icon error&lt;/vs-button&gt;\n            &lt;vs-button @click=&quot;$vs.notify({title:'Icon mail',text:'Lorem ipsum dolor sit amet, consectetur',color:'dark',icon:'chat'})&quot; color=&quot;dark&quot; type=&quot;flat&quot;&gt;Icon chat&lt;/vs-button&gt;\n            &lt;vs-button @click=&quot;randomIcon()&quot; color=&quot;success&quot; type=&quot;gradient&quot;&gt;Icon Random Color&lt;/vs-button&gt;\n            &lt;/div&gt;\n            &lt;/template&gt;\n            &lt;script&gt;\n            export default {\n            methods:{\n            randomIcon(){\n            function getRandomInt(min, max) {\n            return Math.floor(Math.random() * (max - min)) + min;\n            }\n            let color = `rgb(${getRandomInt(0,255)},${getRandomInt(0,255)},${getRandomInt(0,255)})`\n            this.$vs.notify({title:'Icon mail',text:'Lorem ipsum dolor sit amet, consectetur',color:color,icon:'verified_user'})\n            }\n            }\n            }\n            &lt;/script&gt;\n          </vs-prism>\n        </vs-popup>\n        <!-- Code -->\n      </vs-card>\n\n      <!--\n        /////////////////\n        Fixed and Function click\n        /////////////////\n      -->\n      <vs-card>\n        <h3 class=\"card-title d-flex\">\n          Fixed and Function click\n          <vs-button class=\"ml-auto p-0\" @click=\"funnotification=true\" type=\"line\">\n            <vs-icon icon=\"code\"></vs-icon>\n          </vs-button>\n        </h3>\n        <p class=\"card-subtitle\">\n          Sometimes we need to execute a function when the user clicks on the notification. For this, pass a function to the click property. Example:\n          <code>click:()=>{ ... }</code>\n        </p>\n\n        <div class=\"btn-alignment\">\n          <vs-button @click=\"myFunction()\" type=\"flat\">Run Example</vs-button>\n        </div>\n\n        <!-- Code -->\n        <vs-popup class=\"holamundo\" title=\"Code\" :active.sync=\"funnotification\">\n          <vs-prism>\n            &lt;template lang=&quot;html&quot;&gt;\n            &lt;div class=&quot;centerx&quot;&gt;\n            &lt;vs-button @click=&quot;myFunction()&quot; type=&quot;flat&quot;&gt;Run Example&lt;/vs-button&gt;\n            &lt;/div&gt;\n            &lt;/template&gt;\n            &lt;script&gt;\n            export default {\n            methods:{\n            myFunction(){\n            this.$vs.notify({\n            title:'Function click',\n            text:'Click on me',\n            color:'primary',\n            fixed:true,\n            click:()=&gt;{\n            // Secondary function\n            this.$vs.notify({\n            title:'Secondary function',\n            text:'Executed the function when clicking',\n            color:'success',\n            icon:'check_box'\n            })\n            },\n            })\n            },\n            }\n            }\n            &lt;/script&gt;\n          </vs-prism>\n        </vs-popup>\n        <!-- Code -->\n      </vs-card>\n\n      <!--\n        /////////////////\n        Time Notification\n        /////////////////\n      -->\n      <vs-card>\n        <h3 class=\"card-title d-flex\">\n          Time Notification\n          <vs-button class=\"ml-auto p-0\" @click=\"timenotification=true\" type=\"line\">\n            <vs-icon icon=\"code\"></vs-icon>\n          </vs-button>\n        </h3>\n        <p class=\"card-subtitle\">\n          You can change the total time that the notification stays on the screen with the time property. Example:\n          <code>time: 4000</code>.\n        </p>\n\n        <div class=\"btn-alignment\">\n          <vs-button\n            @click=\"$vs.notify({\n                  title:'Time default',\n                  text:'Lorem ipsum dolor sit amet consectetur',\n                  color:'primary',\n                  icon:'query_builder'\n                })\"\n            color=\"primary\"\n            type=\"flat\"\n          >Time default</vs-button>\n\n          <vs-button\n            @click=\"$vs.notify({\n                  time:4000,\n                  title:'Time 4s (4000)',\n                  text:'Lorem ipsum dolor sit amet consectetur',\n                  color:'primary',\n                  icon:'query_builder'\n                })\"\n            color=\"primary\"\n            type=\"flat\"\n          >Time 4s (4000)</vs-button>\n\n          <vs-button\n            @click=\"$vs.notify({\n                  time:8000,\n                  title:'Time 8s (8000)',\n                  text:'Lorem ipsum dolor sit amet consectetur',\n                  color:'primary',\n                  icon:'query_builder'\n                })\"\n            color=\"primary\"\n            type=\"flat\"\n          >Time 8s (8000)</vs-button>\n        </div>\n\n        <!-- Code -->\n        <vs-popup class=\"holamundo\" title=\"Code\" :active.sync=\"timenotification\">\n          <vs-prism></vs-prism>\n        </vs-popup>\n        <!-- Code -->\n      </vs-card>\n    </vs-col>\n  </vs-row>\n</template>\n\n<script>\nexport default {\n  name: \"notification\",\n  data: () => ({\n    title: \"Notification\",\n    defaultnotification: false,\n    posnotification: false,\n    iconnotification: false,\n    funnotification: false,\n    timenotification: false\n  }),\n  methods: {\n    random() {\n      function getRandomInt(min, max) {\n        return Math.floor(Math.random() * (max - min)) + min;\n      }\n      let color = `rgb(${getRandomInt(0, 255)},${getRandomInt(\n        0,\n        255\n      )},${getRandomInt(0, 255)})`;\n\n      this.$vs.notify({\n        title: \"Color\",\n        text: \"Lorem ipsum dolor sit amet, consectetur\",\n        color: color\n      });\n    },\n    randomCenter() {\n      function getRandomInt(min, max) {\n        return Math.floor(Math.random() * (max - min)) + min;\n      }\n      let color = `rgb(${getRandomInt(0, 255)},${getRandomInt(\n        0,\n        255\n      )},${getRandomInt(0, 255)})`;\n      this.$vs.notify({\n        title: \"Position top-center\",\n        text: \"Lorem ipsum dolor sit amet, consectetur\",\n        color: color,\n        position: \"top-center\"\n      });\n    },\n    randomIcon() {\n      function getRandomInt(min, max) {\n        return Math.floor(Math.random() * (max - min)) + min;\n      }\n      let color = `rgb(${getRandomInt(0, 255)},${getRandomInt(\n        0,\n        255\n      )},${getRandomInt(0, 255)})`;\n\n      this.$vs.notify({\n        title: \"Icon mail\",\n        text: \"Lorem ipsum dolor sit amet, consectetur\",\n        color: color,\n        icon: \"verified_user\"\n      });\n    },\n    myFunction() {\n      this.$vs.notify({\n        title: \"Function click\",\n        text: \"Click on me\",\n        color: \"primary\",\n        fixed: true,\n        click: () => {\n          // Secondary function\n          this.$vs.notify({\n            title: \"Secondary function\",\n            text: \"Executed the function when clicking\",\n            color: \"success\",\n            icon: \"check_box\"\n          });\n        }\n      });\n    }\n  }\n};\n</script>\n\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./notification.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./notification.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./notification.vue?vue&type=template&id=bcf07fde&\"\nimport script from \"./notification.vue?vue&type=script&lang=js&\"\nexport * from \"./notification.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}